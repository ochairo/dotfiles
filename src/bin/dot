#!/usr/bin/env bash
set -euo pipefail

# dot - unified dotfiles CLI dispatcher
# Provides dynamic subcommand discovery and central configuration.

# =============================================================================
# LOAD CONSTANTS AND CONFIGURATION
# =============================================================================

# Get the core directory relative to this script
SCRIPT_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
CORE_DIR="$SCRIPT_DIR/../core"

# Source central constants
# shellcheck disable=SC1091
source "$CORE_DIR/init/constants.sh"

# =============================================================================
# CLI FUNCTIONS
# =============================================================================

usage() {
  echo "dot <command> [args...]" >&2
  echo "" >&2
  echo "Commands:" >&2

  # Function to find and list commands recursively
  find_and_list_commands() {
    local dir="$1"
    local category="$2"

    # Find all .sh files in subdirectories
    local files=()
    while IFS= read -r -d '' file; do
      files+=("$file")
    done < <(find "$dir" -type f -name "*.sh" -print0 | sort -z)

    if [ ${#files[@]} -gt 0 ] && [ -n "$category" ]; then
      echo "" >&2
      echo "  ${category}:" >&2
    fi

    for f in "${files[@]}"; do
      local name summary group
      name="$(basename "$f" .sh)"
      summary="$(grep -E '^# summary:' "$f" | head -1 | sed 's/# summary:[[:space:]]*//')"
      group="$(grep -E '^# group:' "$f" | head -1 | sed 's/# group:[[:space:]]*//')"
      printf "    %-18s %s\n" "$name" "${summary:-}" >&2
    done
  }

  # List commands from each subdirectory
  find_and_list_commands "$COMMANDS_DIR/setup" "Setup"
  find_and_list_commands "$COMMANDS_DIR/diagnostic" "Diagnostic"
  find_and_list_commands "$COMMANDS_DIR/component" "Components"
  find_and_list_commands "$COMMANDS_DIR/maintenance" "Maintenance"

  echo "" >&2
  echo "Use 'dot help <command>' for details." >&2
}

help_cmd() {
  local target="$1"

  # Search for command in subdirectories
  local file=""
  for subdir in "$COMMANDS_DIR"/*; do
    [ -d "$subdir" ] || continue
    local candidate="$subdir/$target.sh"
    if [ -f "$candidate" ]; then
      file="$candidate"
      break
    fi
  done

  if [ -z "$file" ]; then
    echo "Unknown command: $target" >&2
    exit 1
  fi

  awk '/^# usage:/{print substr($0,3)} /^# summary:/{print substr($0,3)} /^# aliases:/{print substr($0,3)}' "$file"
  echo
  echo "Source: $(echo "$file" | sed "s|$PROJECT_ROOT/||")"
}

# =============================================================================
# MAIN CLI DISPATCHER
# =============================================================================

if [ $# -eq 0 ]; then
  usage; exit 1
fi

case "$1" in
  help)
    shift || true
    if [ $# -eq 0 ]; then usage; exit 0; fi
    help_cmd "$1"; exit 0;
    ;;
  --version|-v)
    echo "dot (scaffold) 0.0.1"; exit 0;
    ;;
  -h|--help)
    usage; exit 0;
    ;;
esac

cmd="$1"; shift || true

# Search for command file in subdirectories
cmd_file=""
for subdir in "$COMMANDS_DIR"/*; do
  [ -d "$subdir" ] || continue
  candidate="$subdir/$cmd.sh"
  if [ -f "$candidate" ]; then
    cmd_file="$candidate"
    break
  fi
done

if [ -z "$cmd_file" ]; then
  echo "Unknown command: $cmd" >&2
  echo "Run 'dot help' to list commands." >&2
  exit 1
fi

# shellcheck source=/dev/null
source "$cmd_file"
