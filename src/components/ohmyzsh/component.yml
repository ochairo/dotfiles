name: ohmyzsh
description: "Oh My Zsh framework for managing zsh configuration"
platforms:
  macos:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  ubuntu:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  debian:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  fedora:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  rhel:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  centos:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  arch:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  opensuse:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
  alpine:
    installMethod: git
    gitUrl: "https://github.com/ohmyzsh/ohmyzsh.git"
    targetDir: "$HOME/.oh-my-zsh"
    depth: 1
    postInstall: |
      if [[ ! -f "${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}" ]]; then
        OMZ_TEMPLATE="${OMZ_TEMPLATE:-$HOME/.oh-my-zsh/templates/zshrc.zsh-template}"
        mkdir -p "$(dirname "$OMZ_TEMPLATE")"
        cat > "$OMZ_TEMPLATE" << 'TEMPLATE_EOF'
      #!/usr/bin/env zsh
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME="robbyrussell"
      plugins=(git)
      if [ -d "$ZSH" ]; then
        source "$ZSH/oh-my-zsh.sh"
      fi
      TEMPLATE_EOF
        log_info "Generated default .zshrc template"
      fi
      if [[ -f "${DOTFILES_ROOT}/src/core/fs.sh" ]]; then
        source "${DOTFILES_ROOT}/src/core/fs.sh"
        fs_symlink "$OMZ_TEMPLATE" "$HOME/.zshrc" ohmyzsh
      fi
parallelSafe: false
critical: true
requires: [git]
provides: [shell]
healthCheck: "test -d $HOME/.oh-my-zsh"
tags: [core]
files: []
