#!/usr/bin/env bash
set -euo pipefail

# dot - unified dotfiles CLI dispatcher
# Provides dynamic subcommand discovery and central configuration.

# =============================================================================
# LOAD CONSTANTS AND CONFIGURATION
# =============================================================================

# Auto-detect DOTFILES_ROOT (repository root)
SCRIPT_PATH="${BASH_SOURCE[0]}"
while [[ -L "$SCRIPT_PATH" ]]; do
  SCRIPT_DIR="$(cd -P "$(dirname "$SCRIPT_PATH")" && pwd)"
  SCRIPT_PATH="$(readlink "$SCRIPT_PATH")"
  [[ "$SCRIPT_PATH" != /* ]] && SCRIPT_PATH="$SCRIPT_DIR/$SCRIPT_PATH"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SCRIPT_PATH")" && pwd)"

DOTFILES_ROOT="$(cd "$SCRIPT_DIR/../../.." && pwd)"
SRC_DIR="$DOTFILES_ROOT/src"
CLI_DIR="$SRC_DIR/cli"
LIB_DIR="$SRC_DIR/lib"
CORE_DIR="$SRC_DIR/core"
COMMANDS_DIR="$CLI_DIR/commands"
COMPONENTS_DIR="$SRC_DIR/components"
CONFIGS_DIR="$SRC_DIR/configs"
export DOTFILES_ROOT SRC_DIR CLI_DIR LIB_DIR CORE_DIR COMMANDS_DIR COMPONENTS_DIR CONFIGS_DIR

[[ -f "$LIB_DIR/index.sh" ]] && source "$LIB_DIR/index.sh"
[[ -f "$CORE_DIR/index.sh" ]] && source "$CORE_DIR/index.sh"

DOT_VERSION="0.1.0"

if [ $# -eq 0 ]; then
  echo "dot <command> [args...]" >&2
  exit 1
fi

case "$1" in
  --version|-V)
    echo "$DOT_VERSION"
    exit 0 ;;
  --help|-h)
    echo "Dotfiles CLI"
    echo "Version: $DOT_VERSION"
    echo "Commands:"
    # List top-level command scripts
    for f in "$COMMANDS_DIR"/*.sh; do
      [ -f "$f" ] || continue
      name="$(basename "$f" .sh)"
      printf "  %s\n" "$name"
    done
    # List nested commands
    for d in "$COMMANDS_DIR"/*; do
      [[ -d "$d" && -f "$d/$(basename "$d").sh" ]] || continue
      name="$(basename "$d")"
      printf "  %s\n" "$name"
    done
    exit 0 ;;
esac

cmd="$1"; shift || true

# Command resolution: prefer flat file, fallback to nested directory form (commands/<cmd>/<cmd>.sh)
if [[ -f "$COMMANDS_DIR/$cmd.sh" ]]; then
  cmd_file="$COMMANDS_DIR/$cmd.sh"
elif [[ -f "$COMMANDS_DIR/$cmd/$cmd.sh" ]]; then
  cmd_file="$COMMANDS_DIR/$cmd/$cmd.sh"
else
  echo "Unknown command: $cmd. Run 'dot <command> --help'." >&2
  exit 1
fi

# shellcheck source=/dev/null
source "$cmd_file"
